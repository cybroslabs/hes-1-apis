syntax = "proto3";
package driver;

option go_package = "github.com/cybroslabs/hes-1-apis/driver/go";

import "google/protobuf/empty.proto";

service Driver {
  rpc StartJob(StartJobRequest) returns (stream JobProgressUpdate);
  rpc CancelJob(CancelJobRequest) returns (CommonResponse);
}

service DriverHost {
  rpc NegotiateStart(NegotiateRequest) returns (CommonResponse);
  rpc CacheSet(CacheSetRequest) returns (google.protobuf.Empty);
  rpc CacheGet(CacheGetRequest) returns (CacheGetResponse);
  rpc EnqueueJobs(QueueJobListRequest) returns (CommonResponse);
}

message JobProgressUpdate {
    string job_id = 1;
    ErrorCode code = 2;
    optional bool jobFinished = 3;
    optional string action_id = 4;
    optional ActionData data = 5;
}

message ActionData {
    oneof data {
        google.protobuf.Empty nodata = 1;
        BillingValues billings = 2;
        ProfileValues profile = 3;
    }
}

message ProfileValues {
    int32 period = 1;
    string unit = 2;
    repeated ProfileBlok blocks = 3;
}

message ProfileBlok {
    int64 start_timestamp = 1;
    repeated MeasuredValue values = 2;
}

message BillingValues {
    repeated BillingValue values = 1;
}

message BillingValue {
    int64 timestamp = 1;
    string unit = 2;
    MeasuredValue value = 3;
}

message MeasuredValue {
    optional int64 status = 1;
    oneof value {
        double double_value = 2;
        int64 int_value = 3;
    }
    int32 exponent = 4;
}

message CacheSetRequest {
    string key = 1;
    AttributeValue value = 2;
}

message CacheGetRequest {
    string key = 1;
}

message CacheGetResponse {
    ErrorCode result = 1;
    AttributeValue value = 2;
}

message NegotiateRequest {
    string version = 1;
    string hostname = 2;
    string meter_type = 3;
    int32 max_concurrent_jobs = 4;
    int32 typical_mem_usage = 5;
    repeated AttributeDefinition connection_attributes = 6;
    repeated JobActionAttributes action_attributes = 7;
}

message AttributeDefinition {
    string name = 1;
    AttributeType type = 2;
    bool mandatory = 3;
    optional AttributeValue default_value = 4;
}

message JobActionAttributes {
    ActionType type = 1;
    repeated AttributeDefinition attributes = 2;
}

message CancelJobRequest {
    string job_id = 1;
}

message QueueJobRequest {
    string job_id = 1;
    ConnectionInfo connection_info = 2;
    JobSpecification job_specification = 3;
    string job_type = 4;
    repeated JobAction job_actions = 5;
}

message StartJobRequest {
    string job_id = 1;
    ConnectionInfo connection_info = 2;
    JobSpecification job_specification = 3;
    repeated JobAction job_actions = 4;
}

message ConnectionInfo {
    string hostname = 1;
    map<string,AttributeValue> attributes = 2;
}

enum JobPriority {
    PRIORITY_0 = 0;
    PRIORITY_1 = 1;
    PRIORITY_2 = 2;
    PRIORITY_3 = 3;
    PRIORITY_4 = 4;
    PRIORITY_5 = 5;
    PRIORITY_6 = 6;
    PRIORITY_7 = 7;
    PRIORITY_8 = 8;
}

message JobSpecification {
    int64 max_duration = 1;
    JobPriority priority = 2;
}

enum AttributeType {
    ATTRIBUTE_TYPE_INT = 0;
    ATTRIBUTE_TYPE_STRING = 1;
    ATTRIBUTE_TYPE_DOUBLE = 2;
    ATTRIBUTE_TYPE_BINARY = 3;
    ATTRIBUTE_TYPE_TIMESTAMP = 4;
}

enum ActionType {
    ACTION_TYPE_READBV = 0;
    ACTION_TYPE_READLP = 1;
}

message JobAction {
    string action_id = 1;
    ActionType type = 2;
    map<string,AttributeValue> attributes = 3;
}

message AttributeValue {
    oneof value {
        string str_value = 1;
        int64 int_value = 2;
        double double_value = 3;
        bytes binary_value = 4;
    }
}

enum ErrorCode {
    ERROR_CODE_OK = 0;
    ERROR_CODE_BUSY = 1;
    ERROR_CODE_UNSUPPORTED = 2;
    ERROR_CODE_NOT_FOUND = 3;
    ERROR_CODE_ERROR = 4;
}

message CommonResponse {
    ErrorCode result = 1;
}

message QueueJobListRequest {
    repeated QueueJobRequest requests = 1;
}
